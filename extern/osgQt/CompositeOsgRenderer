// Copyright (C) 2017 Mike Krus
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License as
// published by the Free Software Foundation; either version 2 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

#ifndef COMPOSITEOSGRENDERER_H
#define COMPOSITEOSGRENDERER_H

#include <QObject>
#include <QTimer>

#include <osgViewer/CompositeViewer>

class CompositeOsgRenderer : public QObject, public osgViewer::CompositeViewer
{
    bool                                       m_osgInitialized {false};
    osg::ref_ptr<osgViewer::GraphicsWindow>    m_osgWinEmb;

    int                                        _timerId{0};
    osg::Timer                                 _lastFrameStartTime;
    osg::Timer                                 mFrameTimer;
    bool                                       _applicationAboutToQuit {false};
    bool                                       _osgWantsToRenderFrame{true};
    double                                     mSimulationTime;

    Q_OBJECT

public:

    explicit CompositeOsgRenderer(QObject* parent = nullptr);
    explicit CompositeOsgRenderer(osg::ArgumentParser* arguments, QObject* parent = nullptr);

    ~CompositeOsgRenderer() override;

    virtual void resize(int windowWidth, int windowHeight);

    void setGraphicsWindowEmbedded(osg::ref_ptr<osgViewer::GraphicsWindowEmbedded> osgWinEmb);

    void setupOSG(int windowWidth, int windowHeight);

    // overrided from osgViewer::ViewerBase
    void frame(double simulationTime = USE_REFERENCE_TIME) override;

    QTimer mTimer;

protected:

public slots:
    void update();

signals:
    void simulationUpdated(double dt);
};

#endif // COMPOSITEOSGRENDERER_H
