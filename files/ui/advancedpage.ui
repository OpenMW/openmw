<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>AdvancedPage</class>
 <widget class="QWidget" name="AdvancedPage">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>617</width>
    <height>487</height>
   </rect>
  </property>
  <layout class="QVBoxLayout" name="pageVerticalLayout">
   <item>
    <widget class="QTabWidget" name="AdvancedTabWidget">
     <property name="currentIndex">
      <number>0</number>
     </property>
     <widget class="QWidget" name="GameMechanics">
      <attribute name="title">
       <string>Game Mechanics</string>
      </attribute>
      <layout class="QVBoxLayout">
       <item>
        <layout class="QGridLayout" name="gridLayout_3">
         <item row="3" column="1">
          <widget class="QCheckBox" name="enchantedWeaponsMagicalCheckBox">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Make enchanted weaponry without Magical flag bypass normal weapons resistance, like in Morrowind.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Enchanted weapons are magical</string>
           </property>
          </widget>
         </item>
         <item row="1" column="1">
          <widget class="QCheckBox" name="swimUpwardCorrectionCheckBox">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Makes player swim a bit upward from the line of sight. Applies only in third person mode. Intended to make simpler swimming without diving.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Swim upward correction</string>
           </property>
          </widget>
         </item>
         <item row="6" column="0">
          <widget class="QCheckBox" name="avoidCollisionsCheckBox">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If enabled NPCs apply evasion maneuver to avoid collisions with others.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>NPCs avoid collisions</string>
           </property>
          </widget>
         </item>
         <item row="4" column="0">
          <widget class="QCheckBox" name="enableNavigatorCheckBox">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Enable navigator. When enabled background threads are started to build nav mesh for world geometry. Pathfinding system uses nav mesh to build paths. When disabled only pathgrid is used to build paths. Single-core CPU systems may have big performance impact on exiting interior location and moving across exterior world. May slightly affect performance on multi-core CPU systems. Multi-core CPU systems may have different latency for nav mesh update depending on other settings and system performance. Moving across external world, entering/exiting location produce nav mesh update. NPC and creatures may not be able to find path before nav mesh is built around them. Try to disable this if you want to have old fashioned AI which doesn’t know where to go when you stand behind that stone and casting a firebolt.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Build nav mesh for world geometry</string>
           </property>
          </widget>
         </item>
         <item row="0" column="0">
          <widget class="QCheckBox" name="toggleSneakCheckBox">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This setting causes the behavior of the sneak key (bound to Ctrl by default) to toggle sneaking on and off rather than requiring the key to be held down while sneaking. Players that spend significant time sneaking may find the character easier to control with this option enabled. &lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Toggle sneak</string>
           </property>
          </widget>
         </item>
         <item row="5" column="0">
          <widget class="QCheckBox" name="permanentBarterDispositionChangeCheckBox">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Make disposition change of merchants caused by trading permanent.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Permanent barter disposition changes</string>
           </property>
          </widget>
         </item>
         <item row="0" column="1">
          <widget class="QCheckBox" name="normaliseRaceSpeedCheckBox">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Don't use race weight in NPC movement speed calculations.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Racial variation in speed fix</string>
           </property>
          </widget>
         </item>
         <item row="1" column="0">
          <widget class="QCheckBox" name="uncappedDamageFatigueCheckBox">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Make Damage Fatigue magic effect uncapped like Drain Fatigue effect.&lt;/p&gt;&lt;p&gt;This means that unlike Morrowind you will be able to knock down actors using this effect.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Uncapped Damage Fatigue</string>
           </property>
          </widget>
         </item>
         <item row="2" column="1">
          <widget class="QCheckBox" name="canLootDuringDeathAnimationCheckBox">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If this setting is true, the player is allowed to loot actors (e.g. summoned creatures) during death animation, if they are not in combat. In this case we have to increment death counter and run disposed actor's script instantly.&lt;/p&gt;&lt;p&gt;If this setting is false, player has to wait until end of death animation in all cases. Makes using of summoned creatures exploit (looting summoned Dremoras and Golden Saints for expensive weapons) a lot harder. Conflicts with mannequin mods, which use SkipAnim to prevent end of death animation.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Can loot during death animation</string>
           </property>
          </widget>
         </item>
         <item row="2" column="0">
          <widget class="QCheckBox" name="rebalanceSoulGemValuesCheckBox">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Make the value of filled soul gems dependent only on soul magnitude.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Soulgem values rebalance</string>
           </property>
          </widget>
         </item>
         <item row="3" column="0">
          <widget class="QCheckBox" name="followersAttackOnSightCheckBox">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Make player followers and escorters start combat with enemies who have started combat with them or the player. Otherwise they wait for the enemies or the player to do an attack first.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Followers defend immediately</string>
           </property>
          </widget>
         </item>
         <item row="4" column="1">
          <widget class="QCheckBox" name="classicReflectedAbsorbSpellsCheckBox">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Effects of reflected Absorb spells are not mirrored -- like in Morrowind.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Classic reflected Absorb spells behavior</string>
           </property>
          </widget>
         </item>
         <item row="5" column="1">
          <widget class="QCheckBox" name="stealingFromKnockedOutCheckBox">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Make stealing items from NPCs that were knocked down possible during combat.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Always allow stealing from knocked out actors</string>
           </property>
          </widget>
         </item>
        </layout>
       </item>
       <item>
        <widget class="QCheckBox" name="requireAppropriateAmmunitionCheckBox">
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Allow non-standard ammunition solely to bypass normal weapon resistance or weakness.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <property name="text">
          <string>Only appropriate ammunition bypasses normal weapon resistance</string>
         </property>
        </widget>
       </item>
       <item>
        <layout class="QHBoxLayout" name="horizontalUnarmedStrengthLayout">
         <item>
          <widget class="QLabel" name="unarmedFactorsStrengthLabel">
           <property name="text">
            <string>Factor strength into hand-to-hand combat:</string>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QComboBox" name="unarmedFactorsStrengthComboBox">
           <property name="currentIndex">
            <number>0</number>
           </property>
           <item>
            <property name="text">
             <string>Off</string>
            </property>
           </item>
           <item>
            <property name="text">
             <string>Affect werewolves</string>
            </property>
           </item>
           <item>
            <property name="text">
             <string>Do not affect werewolves</string>
            </property>
           </item>
          </widget>
         </item>
         <item>
          <spacer name="horizontalSpacer_2">
           <property name="orientation">
            <enum>Qt::Horizontal</enum>
           </property>
           <property name="sizeHint" stdset="0">
            <size>
             <width>40</width>
             <height>20</height>
            </size>
           </property>
          </spacer>
         </item>
        </layout>
       </item>
       <item>
        <layout class="QHBoxLayout" name="horizontalPhysicsThreadsLayout">
         <item>
          <widget class="QLabel" name="physicsThreadsLabel">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;How many threads will be spawned to compute physics update in the background. A value of 0 means that the update will be performed in the main thread.&lt;/p&gt;&lt;p&gt;A value greater than 1 requires the Bullet library be compiled with multithreading support.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Background physics threads</string>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QSpinBox" name="physicsThreadsSpinBox"/>
         </item>
         <item>
          <spacer name="horizontalSpacer_4">
           <property name="orientation">
            <enum>Qt::Horizontal</enum>
           </property>
           <property name="sizeHint" stdset="0">
            <size>
             <width>40</width>
             <height>20</height>
            </size>
           </property>
          </spacer>
         </item>
        </layout>
       </item>
       <item>
        <spacer name="verticalSpacer_3">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>40</height>
          </size>
         </property>
        </spacer>
       </item>
      </layout>
     </widget>
     <widget class="QWidget" name="Visuals">
      <attribute name="title">
       <string>Visuals</string>
      </attribute>
      <layout class="QVBoxLayout">
       <item>
        <layout class="QGridLayout" name="gridLayout_2">
         <item row="5" column="1">
          <widget class="QCheckBox" name="turnToMovementDirectionCheckBox">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Affects side and diagonal movement. Enabling this setting makes movement more realistic.&lt;/p&gt;&lt;p&gt;If disabled then the whole character's body is pointed to the direction of view. Diagonal movement has no special animation and causes sliding.&lt;/p&gt;&lt;p&gt;If enabled then the character turns lower body to the direction of movement. Upper body is turned partially. Head is always pointed to the direction of view. In combat mode it works only for diagonal movement. In non-combat mode it changes straight right and straight left movement as well. Also turns the whole body up or down when swimming according to the movement direction.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Turn to movement direction</string>
           </property>
          </widget>
         </item>
         <item row="5" column="0">
          <widget class="QCheckBox" name="smoothMovementCheckBox">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Makes NPCs and player movement more smooth. Recommended to use with "turn to movement direction" enabled.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Smooth movement</string>
           </property>
          </widget>
         </item>
         <item row="0" column="1">
          <widget class="QCheckBox" name="distantLandCheckBox">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If true, use paging and LOD algorithms to display the entire terrain. If false, only display terrain of the loaded cells.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Distant land</string>
           </property>
          </widget>
         </item>
         <item row="3" column="0">
          <widget class="QCheckBox" name="autoUseTerrainNormalMapsCheckBox">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;See 'auto use object normal maps'. Affects terrain.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Auto use terrain normal maps</string>
           </property>
          </widget>
         </item>
         <item row="4" column="0">
          <widget class="QCheckBox" name="autoUseTerrainSpecularMapsCheckBox">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If a file with pattern 'terrain specular map pattern' exists, use that file as a 'diffuse specular' map. The texture must contain the layer colour in the RGB channel (as usual), and a specular multiplier in the alpha channel.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Auto use terrain specular maps</string>
           </property>
          </widget>
         </item>
         <item row="1" column="1">
          <widget class="QCheckBox" name="activeGridObjectPagingCheckBox">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Use object paging for active cells grid.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Active grid object paging</string>
           </property>
          </widget>
         </item>
         <item row="2" column="1">
          <widget class="QCheckBox" name="magicItemAnimationsCheckBox">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Use casting animations for magic items, just as for spells.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Use magic item animation</string>
           </property>
          </widget>
         </item>
         <item row="6" column="0">
          <widget class="QCheckBox" name="animSourcesCheckBox">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Load per-group KF-files and skeleton files from Animations folder&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Use additional animation sources</string>
           </property>
          </widget>
         </item>
         <item row="1" column="0">
          <widget class="QCheckBox" name="autoUseObjectNormalMapsCheckBox">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If this option is enabled, normal maps are automatically recognized and used if they are named appropriately
(see 'normal map pattern', e.g. for a base texture foo.dds, the normal map texture would have to be named foo_n.dds).
If this option is disabled, normal maps are only used if they are explicitly listed within the mesh file (.nif or .osg file). Affects objects.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Auto use object normal maps</string>
           </property>
          </widget>
         </item>
         <item row="4" column="1">
          <widget class="QCheckBox" name="bumpMapLocalLightingCheckBox">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Normally environment map reflections aren't affected by lighting, which makes environment-mapped (and thus bump-mapped objects) glow in the dark.
Morrowind Code Patch includes an option to remedy that by doing environment-mapping before applying lighting, this is the equivalent of that option.
Affected objects will use shaders.
&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Bump/reflect map local lighting</string>
           </property>
          </widget>
         </item>
         <item row="0" column="0">
          <layout class="QHBoxLayout" name="viewingDistanceLayout">
           <item>
            <widget class="QLabel" name="viewingDistanceLabel">
             <property name="text">
              <string>Viewing distance</string>
             </property>
            </widget>
           </item>
           <item>
            <widget class="QDoubleSpinBox" name="viewingDistanceComboBox">
             <property name="suffix">
              <string> Cells</string>
             </property>
             <property name="minimum">
              <double>0.000000000000000</double>
             </property>
             <property name="singleStep">
              <double>0.500000000000000</double>
             </property>
            </widget>
           </item>
          </layout>
         </item>
         <item row="2" column="0">
          <widget class="QCheckBox" name="autoUseObjectSpecularMapsCheckBox">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If this option is enabled, specular maps are automatically recognized and used if they are named appropriately
(see 'specular map pattern', e.g. for a base texture foo.dds,
the specular map texture would have to be named foo_spec.dds).
If this option is disabled, normal maps are only used if they are explicitly listed within the mesh file
(.osg file, not supported in .nif files). Affects objects.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Auto use object specular maps</string>
           </property>
          </widget>
         </item>
         <item row="3" column="1">
          <widget class="QCheckBox" name="radialFogCheckBox">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;By default, the fog becomes thicker proportionally to your distance from the clipping plane set at the clipping distance, which causes distortion at the edges of the screen.
This setting makes the fog use the actual eye point distance (or so called Euclidean distance) to calculate the fog, which makes the fog look less artificial, especially if you have a wide FOV.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Radial fog</string>
           </property>
          </widget>
         </item>
        </layout>
       </item>
       <item>
        <layout class="QVBoxLayout" name="sheathingLayout">
         <property name="leftMargin">
          <number>20</number>
         </property>
         <item>
          <widget class="QCheckBox" name="weaponSheathingCheckBox">
           <property name="enabled">
            <bool>false</bool>
           </property>
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Render holstered weapons (with quivers and scabbards), requires modded assets.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Weapon sheathing</string>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QCheckBox" name="shieldSheathingCheckBox">
           <property name="enabled">
            <bool>false</bool>
           </property>
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Render holstered shield, requires modded assets.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Shield sheathing</string>
           </property>
          </widget>
         </item>
        </layout>
       </item>
       <item>
        <spacer name="verticalSpacer_4">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>40</height>
          </size>
         </property>
        </spacer>
       </item>
      </layout>
     </widget>
     <widget class="QWidget" name="cameraSettings">
      <attribute name="title">
       <string>Camera</string>
      </attribute>
      <layout class="QVBoxLayout">
       <item>
        <widget class="QCheckBox" name="viewOverShoulderCheckBox">
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This setting controls third person view mode.&lt;/p&gt;&lt;p&gt;False: View is centered on the character's head. Crosshair is hidden.
True: In non-combat mode camera is positioned behind the character's shoulder. Crosshair is visible in third person mode as well.
&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <property name="text">
          <string>View over the shoulder</string>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QCheckBox" name="autoSwitchShoulderCheckBox">
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;When player is close to an obstacle, automatically switches camera to the shoulder that is farther away from the obstacle.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <property name="text">
          <string>Auto switch shoulder</string>
         </property>
        </widget>
       </item>
       <item>
        <layout class="QVBoxLayout" name="viewOverShoulderVerticalLayout">
         <property name="leftMargin">
          <number>20</number>
         </property>
         <property name="topMargin">
          <number>0</number>
         </property>
         <property name="rightMargin">
          <number>0</number>
         </property>
         <property name="bottomMargin">
          <number>0</number>
         </property>
         <item>
          <layout class="QHBoxLayout" name="defaultShoulderHorizontalLayout">
           <property name="leftMargin">
            <number>0</number>
           </property>
           <property name="topMargin">
            <number>0</number>
           </property>
           <property name="rightMargin">
            <number>0</number>
           </property>
           <property name="bottomMargin">
            <number>0</number>
           </property>
           <item>
            <widget class="QLabel" name="defaultShoulderLabel">
             <property name="text">
              <string>Default shoulder:</string>
             </property>
            </widget>
           </item>
           <item>
            <widget class="QComboBox" name="defaultShoulderComboBox">
             <property name="currentIndex">
              <number>0</number>
             </property>
             <item>
              <property name="text">
               <string>Right</string>
              </property>
             </item>
             <item>
              <property name="text">
               <string>Left</string>
              </property>
             </item>
            </widget>
           </item>
           <item>
            <spacer name="horizontalSpacer_3">
             <property name="orientation">
              <enum>Qt::Horizontal</enum>
             </property>
             <property name="sizeHint" stdset="0">
              <size>
               <width>40</width>
               <height>20</height>
              </size>
             </property>
            </spacer>
           </item>
          </layout>
         </item>
        </layout>
       </item>
       <item>
        <widget class="QCheckBox" name="previewIfStandStillCheckBox">
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If enabled then the character rotation is not synchonized with the camera rotation while the character doesn't move and not in combat mode.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <property name="text">
          <string>Preview if stand still</string>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QCheckBox" name="deferredPreviewRotationCheckBox">
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If enabled then the character smoothly rotates to the view direction after exiting preview or vanity mode. If disabled then the camera rotates rather than the character.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <property name="text">
          <string>Deferred preview rotation</string>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QCheckBox" name="headBobbingCheckBox">
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Enables head bobbing when move in first person mode.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <property name="text">
          <string>Head bobbing in 1st person mode</string>
         </property>
        </widget>
       </item>
       <item>
        <spacer>
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>0</width>
           <height>0</height>
          </size>
         </property>
        </spacer>
       </item>
      </layout>
     </widget>
     <widget class="QWidget" name="Interface">
      <attribute name="title">
       <string>Interface</string>
      </attribute>
      <layout class="QVBoxLayout">
       <item>
        <layout class="QHBoxLayout" name="horizontalLayout">
         <item alignment="Qt::AlignRight">
          <widget class="QLabel" name="showOwnedLabel">
           <property name="text">
            <string>Show owned:</string>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QComboBox" name="showOwnedComboBox">
           <property name="currentIndex">
            <number>1</number>
           </property>
           <item>
            <property name="text">
             <string>Off</string>
            </property>
           </item>
           <item>
            <property name="text">
             <string>Tool Tip Only</string>
            </property>
           </item>
           <item>
            <property name="text">
             <string>Crosshair Only</string>
            </property>
           </item>
           <item>
            <property name="text">
             <string>Tool Tip and Crosshair</string>
            </property>
           </item>
          </widget>
         </item>
         <item>
          <spacer name="horizontalSpacer">
           <property name="orientation">
            <enum>Qt::Horizontal</enum>
           </property>
           <property name="sizeHint" stdset="0">
            <size>
             <width>40</width>
             <height>20</height>
            </size>
           </property>
          </spacer>
         </item>
        </layout>
       </item>
       <item>
        <widget class="QCheckBox" name="showEffectDurationCheckBox">
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Show the remaining duration of magic effects and lights if this setting is true. The remaining duration is displayed in the tooltip by hovering over the magical effect. &lt;/p&gt;&lt;p&gt;The default value is false.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <property name="text">
          <string>Show effect duration</string>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QCheckBox" name="showEnchantChanceCheckBox">
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Whether or not the chance of success will be displayed in the enchanting menu.&lt;/p&gt;&lt;p&gt;The default value is false.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <property name="text">
          <string>Show enchant chance</string>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QCheckBox" name="showMeleeInfoCheckBox">
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If this setting is true, melee weapons reach and speed will be shown on item tooltip.&lt;/p&gt;&lt;p&gt;The default value is false.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <property name="text">
          <string>Show melee info</string>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QCheckBox" name="showProjectileDamageCheckBox">
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If this setting is true, damage bonus of arrows and bolts will be shown on item tooltip.&lt;/p&gt;&lt;p&gt;The default value is false.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <property name="text">
          <string>Show projectile damage</string>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QCheckBox" name="changeDialogTopicsCheckBox">
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If this setting is true, dialogue topics will have a different color if the topic is specific to the NPC you're talking to or the topic was previously seen. Color can be changed in settings.cfg.&lt;/p&gt;&lt;p&gt;The default value is false.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <property name="text">
          <string>Change dialogue topic color</string>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QCheckBox" name="stretchBackgroundCheckBox">
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Stretch menus, load screens, etc. to the window aspect ratio.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <property name="text">
          <string>Stretch menu background</string>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QCheckBox" name="graphicHerbalismCheckBox">
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If this setting is true, containers supporting graphic herbalism will do so instead of opening the menu.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <property name="text">
          <string>Enable graphic herbalism</string>
         </property>
        </widget>
       </item>
       <item>
        <spacer name="verticalSpacer_2">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>40</height>
          </size>
         </property>
        </spacer>
       </item>
      </layout>
     </widget>
     <widget class="QWidget" name="BugFixes">
      <attribute name="title">
       <string>Bug Fixes</string>
      </attribute>
      <layout class="QVBoxLayout">
       <item>
        <widget class="QCheckBox" name="preventMerchantEquippingCheckBox">
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Prevents merchants from equipping items that are sold to them.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <property name="text">
          <string>Merchant equipping fix</string>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QCheckBox" name="trainersTrainingSkillsBasedOnBaseSkillCheckBox">
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Trainers now only choose which skills to train using their base skill points, allowing mercantile improving effects to be used without making mercantile an offered skill.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <property name="text">
          <string>Trainers choose their training skills based on their base skill points</string>
         </property>
        </widget>
       </item>
       <item>
        <spacer>
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>0</width>
           <height>0</height>
          </size>
         </property>
        </spacer>
       </item>
      </layout>
     </widget>
     <widget class="QWidget" name="Miscellaneous">
      <attribute name="title">
       <string>Miscellaneous</string>
      </attribute>
      <layout class="QVBoxLayout" name="scrollAreaVerticalLayout">
       <item>
        <widget class="QGroupBox" name="savesGroup">
         <property name="title">
          <string>Saves</string>
         </property>
         <layout class="QVBoxLayout" name="savesGroupVerticalLayout">
          <item>
           <widget class="QCheckBox" name="timePlayedCheckbox">
            <property name="toolTip">
             <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This setting determines whether the amount of the time the player has spent playing will be displayed for each saved game in the Load menu.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
            </property>
            <property name="text">
             <string>Add &quot;Time Played&quot; to saves</string>
            </property>
           </widget>
          </item>
          <item>
           <layout class="QHBoxLayout" name="maximumQuicksavesLayout">
            <item>
             <widget class="QLabel" name="maximumQuicksavesLabel">
              <property name="text">
               <string>Maximum Quicksaves</string>
              </property>
             </widget>
            </item>
            <item>
             <widget class="QSpinBox" name="maximumQuicksavesComboBox">
              <property name="minimum">
               <number>1</number>
              </property>
             </widget>
            </item>
           </layout>
          </item>
         </layout>
        </widget>
       </item>
       <item>
        <widget class="QGroupBox" name="otherGroup">
         <property name="title">
          <string>Other</string>
         </property>
         <layout class="QVBoxLayout" name="otherGroupVerticalLayout">
          <item>
           <layout class="QHBoxLayout" name="screenshotFormatLayout">
            <item alignment="Qt::AlignRight">
             <widget class="QLabel" name="screenshotFormatLabel">
              <property name="text">
               <string>Screenshot Format</string>
              </property>
             </widget>
            </item>
            <item>
             <widget class="QComboBox" name="screenshotFormatComboBox">
              <item>
               <property name="text">
                <string>JPG</string>
               </property>
              </item>
              <item>
               <property name="text">
                <string>PNG</string>
               </property>
              </item>
              <item>
               <property name="text">
                <string>TGA</string>
               </property>
              </item>
             </widget>
            </item>
           </layout>
          </item>
         </layout>
        </widget>
       </item>
       <item>
        <spacer>
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>0</width>
           <height>0</height>
          </size>
         </property>
        </spacer>
       </item>
      </layout>
     </widget>
     <widget class="QWidget" name="Testing">
      <attribute name="title">
       <string>Testing</string>
      </attribute>
      <layout class="QVBoxLayout">
       <item>
        <widget class="QLabel" name="testingLabel">
         <property name="text">
          <string>These settings are intended for testing mods and will cause issues if used for normal gameplay.</string>
         </property>
         <property name="wordWrap">
          <bool>true</bool>
         </property>
        </widget>
       </item>
       <item>
        <widget class="Line" name="testingLine">
         <property name="orientation">
          <enum>Qt::Horizontal</enum>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QCheckBox" name="grabCursorCheckBox">
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;OpenMW will capture control of the cursor if this setting is true.&lt;/p&gt;&lt;p&gt;In “look mode”, OpenMW will center the cursor regardless of the value of this setting (since the cursor/crosshair is always centered in the OpenMW window). However, in GUI mode, this setting determines the behavior when the cursor is moved outside the OpenMW window. If true, the cursor movement stops at the edge of the window preventing access to other applications. If false, the cursor is allowed to move freely on the desktop.&lt;/p&gt;&lt;p&gt;This setting does not apply to the screen where escape has been pressed, where the cursor is never captured. Regardless of this setting “Alt-Tab” or some other operating system dependent key sequence can be used to allow the operating system to regain control of the mouse cursor. This setting interacts with the minimize on focus loss setting by affecting what counts as a focus loss. Specifically on a two-screen configuration it may be more convenient to access the second screen with setting disabled.&lt;/p&gt;&lt;p&gt;Note for developers: it’s desirable to have this setting disabled when running the game in a debugger, to prevent the mouse cursor from becoming unusable when the game pauses on a breakpoint.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <property name="text">
          <string>Grab cursor</string>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QCheckBox" name="skipMenuCheckBox">
         <property name="text">
          <string>Skip menu and generate default character</string>
         </property>
        </widget>
       </item>
       <item>
        <layout class="QHBoxLayout" name="startDefaultCharacterAtHorizontalLayout">
         <item>
          <spacer name="startDefaultCharacterAtHorizontalSpacer">
           <property name="orientation">
            <enum>Qt::Horizontal</enum>
           </property>
           <property name="sizeType">
            <enum>QSizePolicy::Fixed</enum>
           </property>
           <property name="sizeHint" stdset="0">
            <size>
             <width>0</width>
             <height>0</height>
            </size>
           </property>
          </spacer>
         </item>
         <item>
          <widget class="QLabel" name="startDefaultCharacterAtLabel">
           <property name="text">
            <string>Start default character at</string>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QLineEdit" name="startDefaultCharacterAtField">
           <property name="placeholderText">
            <string>default cell</string>
           </property>
          </widget>
         </item>
        </layout>
       </item>
       <item>
        <widget class="QLabel" name="label">
         <property name="text">
          <string>Run script after startup:</string>
         </property>
        </widget>
       </item>
       <item>
        <layout class="QHBoxLayout" name="runScriptAfterStartupHorizontalLayout">
         <item>
          <widget class="QLineEdit" name="runScriptAfterStartupField"/>
         </item>
         <item>
          <widget class="QPushButton" name="runScriptAfterStartupBrowseButton">
           <property name="text">
            <string>Browse…</string>
           </property>
          </widget>
         </item>
        </layout>
       </item>
       <item>
        <spacer>
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>0</width>
           <height>0</height>
          </size>
         </property>
        </spacer>
       </item>
      </layout>
     </widget>
    </widget>
   </item>
  </layout>
 </widget>
 <resources/>
 <connections/>
</ui>
