material openmw_objects_base
{
    diffuse 1.0 1.0 1.0 1.0
    specular 0.4 0.4 0.4 32
    ambient 1.0 1.0 1.0
    emissive 0.0 0.0 0.0
    has_vertex_colour false
    diffuseMap black.png

    is_transparent false // real transparency, alpha rejection doesn't count here
    scene_blend default
    depth_write default
    alpha_rejection default

    pass
    {
        vertex_program openmw_objects_vertex
        fragment_program openmw_objects_fragment

        shader_properties
        {
            has_vertex_colour $has_vertex_colour
            is_transparent $is_transparent
        }

        diffuse $diffuse
        specular $specular
        ambient $ambient
        emissive $emissive
        scene_blend $scene_blend
        alpha_rejection $alpha_rejection
        depth_write $depth_write

        ffp_vertex_colour_ambient $has_vertex_colour


        texture_unit diffuseMap
        {
            direct_texture $diffuseMap
            create_in_ffp true
        }
      
        texture_unit shadowMap0
        {
            content_type shadow
            tex_address_mode clamp
            filtering none
        }
        texture_unit shadowMap1
        {
            content_type shadow
            tex_address_mode clamp
            filtering none
        }
        texture_unit shadowMap2
        {
            content_type shadow
            tex_address_mode clamp
            filtering none
        }
        
        texture_unit causticMap
        {
            direct_texture water_nm.png
        }
    }
}
